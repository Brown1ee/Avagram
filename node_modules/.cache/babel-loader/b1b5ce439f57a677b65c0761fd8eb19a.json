{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\REST API\\\\src\\\\components\\\\LoggInn.js\";\nimport React, { Component } from \"react\"; // import \"./Home.jsx\";\n\nimport \"./Login.jsx\";\nimport { Container, Text, Description, Span, FormContainer, ContainerForFormContainer, InputForCheckbox } from \"./LoggInn.jsx\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { Label } from \"./LoggInn.jsx\";\nimport { Row } from \"./LoggInn.jsx\";\nimport { Checkbox } from \"./LoggInn.jsx\";\nimport { LogInButton } from \"./LoggInn.jsx\";\n\nclass LoggInn extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = true;\n    this.state = {\n      message: \"Loading...\",\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      axios.post(\"http://localhost:8080/api/authenticate\", this.state).then(res => {\n        if (res.data.token) {\n          sessionStorage.setItem(\"token\", res.data.token);\n          this.props.history.push(\"/secret\");\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        this.setState({\n          error: err.response.data.error\n        });\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/api/home\").then(res => res.text()).then(res => {\n      if (this._isMounted) {\n        this.setState({\n          message: res\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let inputColor = classNames({\n      redInput: this.state.error\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.message))), React.createElement(ContainerForFormContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FormContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Avagram\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: [inputColor, \"input-for-logginn\"].join(\" \"),\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Span, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.error), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: [inputColor, \"input-for-logginn\"].join(\" \"),\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Span, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(InputForCheckbox, {\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), \"Remember me\"), React.createElement(LogInButton, {\n      type: \"submit\",\n      value: \"Log In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default LoggInn;","map":{"version":3,"sources":["C:\\Users\\dell\\Desktop\\REST API\\src\\components\\LoggInn.js"],"names":["React","Component","Container","Text","Description","Span","FormContainer","ContainerForFormContainer","InputForCheckbox","axios","classNames","Label","Row","Checkbox","LogInButton","LoggInn","_isMounted","state","message","email","password","error","handleInputChange","event","target","value","name","setState","onSubmit","preventDefault","post","then","res","data","token","sessionStorage","setItem","props","history","push","Error","catch","err","response","componentWillReceiveProps","nextProps","errors","componentDidMount","fetch","text","componentWillUnmount","render","inputColor","redInput","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import \"./Home.jsx\";\r\nimport \"./Login.jsx\";\r\nimport {\r\n  Container,\r\n  Text,\r\n  Description,\r\n  Span,\r\n  FormContainer,\r\n  ContainerForFormContainer,\r\n  InputForCheckbox\r\n} from \"./LoggInn.jsx\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\nimport { Label } from \"./LoggInn.jsx\";\r\nimport { Row } from \"./LoggInn.jsx\";\r\nimport { Checkbox } from \"./LoggInn.jsx\";\r\nimport { LogInButton } from \"./LoggInn.jsx\";\r\n\r\nclass LoggInn extends Component {\r\n  _isMounted = true;\r\n  state = {\r\n    message: \"Loading...\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const { value, name } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:8080/api/authenticate\", this.state)\r\n      .then(res => {\r\n        if (res.data.token) {\r\n          sessionStorage.setItem(\"token\", res.data.token);\r\n          this.props.history.push(\"/secret\");\r\n        } else {\r\n          const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({ error: err.response.data.error });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:8080/api/home\")\r\n      .then(res => res.text())\r\n      .then(res => {\r\n        if (this._isMounted) {\r\n          this.setState({ message: res });\r\n        }\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    let inputColor = classNames({\r\n      redInput: this.state.error\r\n    });\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Text>\r\n            <Description>{this.state.message}</Description>\r\n          </Text>\r\n        </Container>\r\n        <ContainerForFormContainer>\r\n          <FormContainer>\r\n            <form onSubmit={this.onSubmit}>\r\n              <p>Avagram</p>\r\n\r\n              <Row>\r\n                <Label>Email</Label>\r\n                <input\r\n                  className={[inputColor, \"input-for-logginn\"].join(\" \")}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleInputChange}\r\n                  required\r\n                />\r\n              </Row>\r\n              <Span>{this.state.error}</Span>\r\n\r\n              <Row>\r\n                <Label>Password</Label>\r\n                <input\r\n                  className={[inputColor, \"input-for-logginn\"].join(\" \")}\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </Row>\r\n              <Span>{this.state.error}</Span>\r\n              <div>\r\n                <Checkbox>\r\n                  <InputForCheckbox type=\"checkbox\" />\r\n                  <span />\r\n                  Remember me\r\n                </Checkbox>\r\n\r\n                <LogInButton type=\"submit\" value=\"Log In\" />\r\n              </div>\r\n            </form>\r\n          </FormContainer>\r\n        </ContainerForFormContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggInn;\r\n"]},"metadata":{},"sourceType":"module"}