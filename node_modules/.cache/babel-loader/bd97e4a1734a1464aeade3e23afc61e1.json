{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\REST API\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport \"./LoggInn.jsx\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.jsx\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { Header } from \"./Home.jsx\";\nimport { CreateAccountLabelForInput, ErrorText, CreateAccountButton, CreateAccountFormContainer, ContainerForCreateAccountFormContainer, InputErrorColor, InputNormalColor, LabelAndInputRow } from \"./Home.jsx\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      axios.post(\"http://localhost:8080/api/register\", this.state).then(res => {\n        if (res.data.token) {\n          sessionStorage.setItem(\"token\", res.data.token);\n          this.props.history.push(\"/secret\");\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        this.setState({\n          error: err.response.data\n        });\n      });\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    let inputError = classNames({\n      inputErrorColor: error\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/authenticate\",\n      className: \"account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Login\"), React.createElement(ContainerForCreateAccountFormContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(CreateAccountFormContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(LabelAndInputRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CreateAccountLabelForInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"First Name\"), error ? React.createElement(InputErrorColor, {\n      type: \"firstName\",\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      value: this.state.firstName,\n      onChange: this.handleInputChange,\n      require: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : React.createElement(InputNormalColor, {\n      type: \"firstName\",\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      value: this.state.firstName,\n      onChange: this.handleInputChange,\n      require: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), error && React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, error), React.createElement(LabelAndInputRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CreateAccountLabelForInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Last Name\"), error ? React.createElement(InputErrorColor, {\n      className: inputError,\n      type: \"lastName\",\n      name: \"lastName\",\n      placeholder: \"Last Name\",\n      value: this.state.lastName,\n      onChange: this.handleInputChange,\n      require: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }) : React.createElement(InputNormalColor, {\n      className: inputError,\n      type: \"lastName\",\n      name: \"lastName\",\n      placeholder: \"Last Name\",\n      value: this.state.lastName,\n      onChange: this.handleInputChange,\n      require: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), error && React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, error), React.createElement(LabelAndInputRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(CreateAccountLabelForInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Email\"), error ? React.createElement(InputErrorColor, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      require: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : React.createElement(InputNormalColor, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      require: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), error && React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, error), React.createElement(LabelAndInputRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(CreateAccountLabelForInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Password\"), error ? React.createElement(InputErrorColor, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      require: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) : React.createElement(InputNormalColor, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      require: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), error && React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, error), React.createElement(CreateAccountButton, {\n      type: \"submit\",\n      value: \"Create Account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:\\Users\\dell\\Desktop\\REST API\\src\\components\\Home.js"],"names":["React","Component","Link","axios","classNames","Header","CreateAccountLabelForInput","ErrorText","CreateAccountButton","CreateAccountFormContainer","ContainerForCreateAccountFormContainer","InputErrorColor","InputNormalColor","LabelAndInputRow","Home","state","firstName","lastName","email","password","error","onSubmit","event","preventDefault","post","then","res","data","token","sessionStorage","setItem","props","history","push","Error","catch","err","setState","response","handleInputChange","target","value","name","render","inputError","inputErrorColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./LoggInn.jsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.jsx\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\nimport { Header } from \"./Home.jsx\";\r\nimport {\r\n  CreateAccountLabelForInput,\r\n  ErrorText,\r\n  CreateAccountButton,\r\n  CreateAccountFormContainer,\r\n  ContainerForCreateAccountFormContainer,\r\n  InputErrorColor,\r\n  InputNormalColor,\r\n  LabelAndInputRow\r\n} from \"./Home.jsx\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:8080/api/register\", this.state)\r\n      .then(res => {\r\n        if (res.data.token) {\r\n          sessionStorage.setItem(\"token\", res.data.token);\r\n          this.props.history.push(\"/secret\");\r\n        } else {\r\n          const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({ error: err.response.data });\r\n      });\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { value, name } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  render() {\r\n    const { error } = this.state;\r\n    let inputError = classNames({\r\n      inputErrorColor: error\r\n    });\r\n    return (\r\n      <div>\r\n        <Link to=\"/authenticate\" className=\"account\">\r\n          Login\r\n        </Link>\r\n        <ContainerForCreateAccountFormContainer>\r\n          <Header>Create Account</Header>\r\n          <CreateAccountFormContainer>\r\n            <form onSubmit={this.onSubmit}>\r\n              <LabelAndInputRow>\r\n                <CreateAccountLabelForInput>\r\n                  First Name\r\n                </CreateAccountLabelForInput>\r\n                {error ? (\r\n                  <InputErrorColor\r\n                    type=\"firstName\"\r\n                    name=\"firstName\"\r\n                    placeholder=\"First Name\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.handleInputChange}\r\n                    require=\"true\"\r\n                  />\r\n                ) : (\r\n                  <InputNormalColor\r\n                    type=\"firstName\"\r\n                    name=\"firstName\"\r\n                    placeholder=\"First Name\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.handleInputChange}\r\n                    require=\"true\"\r\n                  />\r\n                )}\r\n              </LabelAndInputRow>\r\n              {error && <ErrorText>{error}</ErrorText>}\r\n\r\n              <LabelAndInputRow>\r\n                <CreateAccountLabelForInput>\r\n                  Last Name\r\n                </CreateAccountLabelForInput>\r\n                {error ? (\r\n                  <InputErrorColor\r\n                    className={inputError}\r\n                    type=\"lastName\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"Last Name\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.handleInputChange}\r\n                    require=\"true\"\r\n                  />\r\n                ) : (\r\n                  <InputNormalColor\r\n                    className={inputError}\r\n                    type=\"lastName\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"Last Name\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.handleInputChange}\r\n                    require=\"true\"\r\n                  />\r\n                )}\r\n              </LabelAndInputRow>\r\n              {error && <ErrorText>{error}</ErrorText>}\r\n              <LabelAndInputRow>\r\n                <CreateAccountLabelForInput>Email</CreateAccountLabelForInput>\r\n                {error ? (\r\n                  <InputErrorColor\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleInputChange}\r\n                    require=\"true\"\r\n                  />\r\n                ) : (\r\n                  <InputNormalColor\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleInputChange}\r\n                    require=\"true\"\r\n                  />\r\n                )}\r\n              </LabelAndInputRow>\r\n              {error && <ErrorText>{error}</ErrorText>}\r\n              <LabelAndInputRow>\r\n                <CreateAccountLabelForInput>\r\n                  Password\r\n                </CreateAccountLabelForInput>\r\n                {error ? (\r\n                  <InputErrorColor\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange}\r\n                    require=\"true\"\r\n                  />\r\n                ) : (\r\n                  <InputNormalColor\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleInputChange}\r\n                    require=\"true\"\r\n                  />\r\n                )}\r\n              </LabelAndInputRow>\r\n              {error && <ErrorText>{error}</ErrorText>}\r\n              <CreateAccountButton type=\"submit\" value=\"Create Account\" />\r\n            </form>\r\n          </CreateAccountFormContainer>\r\n        </ContainerForCreateAccountFormContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}