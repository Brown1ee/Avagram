{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\REST API\\\\src\\\\components\\\\TaskId.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWindowClose, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Lightbox from \"react-image-lightbox\";\nimport { Avatar, WelcomeTitle, Collection, InputTypeFile, LabelForProfilePicture, LabelForCollections, MyPhotoCollection, StatusStyle, PictureAndStatus, DeleteButton, ImageAndDeleteButton, AvatarAndChoose, PostButton, TextAndStatus, ContainerAllElements, TextAreaAndErrors, PostButtonTextAreaAndText, ErrorText, DeleteButtonAvatar, AvatarAndDeleteButton } from \"./TaskId.jsx\";\nimport LoadingComponent from \"./LoadingComponent\";\nexport default class TaskId extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = true;\n    this.state = {\n      message: \"Loading...\",\n      base64Img: null,\n      base64ImgAvatar: null,\n      avatar: null,\n      status: \"\",\n      statusToPost: \"\",\n      error: \"\",\n      photoCollection: [],\n      isLoading: false,\n      photo: \"\",\n      imagesFromCollection: [],\n      photoIndex: 0,\n      isOpen: false\n    };\n\n    this.handleDelete = imageId => {\n      axios.delete(\"http://localhost:8080/api/picture/\".concat(imageId)).then(res => {\n        this.setState({\n          photo: res.data\n        }); // console.log(\"resss\", res);\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    this.handleAvatarDelete = () => {\n      const avatar = \"\";\n      axios.post(\"http://localhost:8080/api/avatar\", {\n        data: avatar\n      }, {\n        headers: {\n          \"x-access-token\": sessionStorage.getItem(\"token\")\n        }\n      }).then(data => this.setState({\n        avatar: \"\"\n      }));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        status: e.target.value\n      });\n    };\n\n    this.onSubmitHandler = () => {\n      const status = this.state.status;\n      axios.post(\"http://localhost:8080/api/status\", {\n        status\n      }, {\n        headers: {\n          \"x-access-token\": sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        if (res.data.message) {\n          this.setState({\n            statusToPost: status\n          });\n        } else {}\n      }).catch(err => this.setState({\n        error: err.response.data.errors.status\n      }));\n      axios.get(\"http://localhost:8080/api/status\", {\n        headers: {\n          \"x-access-token\": sessionStorage.getItem(\"token\")\n        }\n      }).then(res => this.setState({\n        statusToPost: res.data\n      }));\n      this.setState({\n        status: \"\"\n      });\n    };\n\n    this.handleFileSelect = this.handleFileSelect.bind(this);\n    this.fetchUserPhoto = this.fetchUserPhoto.bind(this);\n    this.handleFileAvatar = this.handleFileAvatar.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(\"http://localhost:8080/api/secret\", {\n      headers: {\n        \"x-access-token\": sessionStorage.getItem(\"token\")\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      message: res\n    }));\n    axios.get(\"http://localhost:8080/api/status\", {\n      headers: {\n        \"x-access-token\": sessionStorage.getItem(\"token\")\n      }\n    }).then(res => this.setState({\n      statusToPost: res.data\n    }));\n    this.fetchUserPhoto();\n    this.fetchUserAvatar();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.base64Img !== this.state.base64Img || prevState.base64ImgAvatar !== this.state.base64ImgAvatar || prevState.photo !== this.state.photo || prevState.avatar !== this.state.avatar) {\n      this.fetchUserPhoto();\n      this.fetchUserAvatar();\n      this.setState({\n        photo: \"\"\n      });\n    }\n  }\n\n  fetchUserPhoto() {\n    axios.get(\"http://localhost:8080/api/picture\", {\n      headers: {\n        \"x-access-token\": sessionStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      if (this._isMounted) {\n        const pic = res.data.record;\n        const imageFromObject = pic.map(obj => obj.image);\n        this.setState({\n          isLoading: false,\n          photoCollection: pic,\n          imagesFromCollection: imageFromObject\n        });\n      }\n    });\n  }\n\n  fetchUserAvatar() {\n    axios.get(\"http://localhost:8080/api/avatar\", {\n      headers: {\n        \"x-access-token\": sessionStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      if (this._isMounted) {\n        this.setState({\n          isLoading: false,\n          avatar: res.data.user.avatar\n        });\n      }\n    });\n  }\n\n  handleFileSelect(e) {\n    const files = e.target.files;\n    const file = files[0];\n\n    if (files && file) {\n      const reader = new FileReader();\n\n      reader.onload = rdEvt => {\n        const binaryStr = rdEvt.target.result;\n        const base64Img = btoa(binaryStr);\n        axios.post(\"http://localhost:8080/api/picture\", {\n          data: base64Img\n        }, {\n          headers: {\n            \"x-access-token\": sessionStorage.getItem(\"token\")\n          }\n        }).then(data => {\n          if (data.data.message) {\n            this.setState({\n              base64Img\n            });\n          }\n        }).catch(err => {\n          console.log(err.response);\n        });\n      };\n\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  handleFileAvatar(e) {\n    const files = e.target.files;\n    const file = files[0];\n\n    if (files && file) {\n      const reader = new FileReader();\n\n      reader.onload = rdEvt => {\n        const binaryStr = rdEvt.target.result;\n        const base64ImgAvatar = btoa(binaryStr);\n        axios.post(\"http://localhost:8080/api/avatar\", {\n          data: base64ImgAvatar\n        }, {\n          headers: {\n            \"x-access-token\": sessionStorage.getItem(\"token\")\n          }\n        }).then(data => {\n          if (data.data.message) {\n            this.setState({\n              base64ImgAvatar\n            });\n          }\n        }).catch(err => {\n          alert(\"Error while uploading image using firebase storage\");\n        });\n      };\n\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          avatar = _this$state.avatar,\n          statusToPost = _this$state.statusToPost,\n          error = _this$state.error,\n          photoCollection = _this$state.photoCollection,\n          isLoading = _this$state.isLoading,\n          imagesFromCollection = _this$state.imagesFromCollection,\n          photoIndex = _this$state.photoIndex,\n          isOpen = _this$state.isOpen;\n    let data;\n\n    if (!isLoading) {\n      data = React.createElement(ContainerAllElements, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(PictureAndStatus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(AvatarAndChoose, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(WelcomeTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, this.state.message), avatar ? React.createElement(AvatarAndDeleteButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        src: \"data:image/jpeg;base64,\".concat(avatar),\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(DeleteButtonAvatar, {\n        onClick: this.handleAvatarDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faWindowClose,\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }))) : React.createElement(LabelForCollections, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(InputTypeFile, {\n        type: \"file\",\n        onChange: this.handleFileAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), React.createElement(InputTypeFile, {\n        type: \"file\",\n        id: \"myuni\",\n        onChange: this.handleFileAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(LabelForProfilePicture, {\n        htmlFor: \"myuni\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Add a profile picture\")), React.createElement(React.Fragment, null, React.createElement(TextAreaAndErrors, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(PostButtonTextAreaAndText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(TextAndStatus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(StatusStyle, {\n        onChange: this.handleChange,\n        value: this.state.status,\n        placeholder: \"what's on your mind?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), statusToPost), React.createElement(PostButton, {\n        onClick: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"post\")), React.createElement(ErrorText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \" \", error)))), React.createElement(MyPhotoCollection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(InputTypeFile, {\n        type: \"file\",\n        onChange: this.handleFileSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(InputTypeFile, {\n        type: \"file\",\n        id: \"myuniqueid\",\n        onChange: this.handleFileSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(LabelForCollections, {\n        htmlFor: \"myuniqueid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faPlusCircle,\n        size: \"4x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      })), photoCollection.map((photo, i) => React.createElement(ImageAndDeleteButton, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(Collection, {\n        src: \"data:image/jpeg;base64,\".concat(photo.image),\n        alt: \"collection\",\n        onClick: () => this.setState({\n          isOpen: true,\n          photoIndex: i\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }), React.createElement(DeleteButton, {\n        onClick: () => this.handleDelete(photo._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faWindowClose,\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }))))), isOpen && React.createElement(Lightbox, {\n        mainSrc: \"data:image/jpeg;base64,\".concat(imagesFromCollection[photoIndex]),\n        nextSrc: \"data:image/jpeg;base64,\".concat(imagesFromCollection[(photoIndex + 1) % imagesFromCollection.length]),\n        prevSrc: \"data:image/jpeg;base64,\".concat(imagesFromCollection[(photoIndex + imagesFromCollection.length - 1) % imagesFromCollection.length]),\n        onCloseRequest: () => this.setState({\n          isOpen: false\n        }),\n        onMovePrevRequest: () => this.setState({\n          photoIndex: (photoIndex + imagesFromCollection.length - 1) % imagesFromCollection.length\n        }),\n        onMoveNextRequest: () => this.setState({\n          photoIndex: (photoIndex + 1) % imagesFromCollection.length\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }));\n    } else {\n      data = React.createElement(LoadingComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, data);\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\dell\\Desktop\\REST API\\src\\components\\TaskId.js"],"names":["React","Component","axios","FontAwesomeIcon","faWindowClose","faPlusCircle","Lightbox","Avatar","WelcomeTitle","Collection","InputTypeFile","LabelForProfilePicture","LabelForCollections","MyPhotoCollection","StatusStyle","PictureAndStatus","DeleteButton","ImageAndDeleteButton","AvatarAndChoose","PostButton","TextAndStatus","ContainerAllElements","TextAreaAndErrors","PostButtonTextAreaAndText","ErrorText","DeleteButtonAvatar","AvatarAndDeleteButton","LoadingComponent","TaskId","constructor","props","_isMounted","state","message","base64Img","base64ImgAvatar","avatar","status","statusToPost","error","photoCollection","isLoading","photo","imagesFromCollection","photoIndex","isOpen","handleDelete","imageId","delete","then","res","setState","data","catch","err","console","handleAvatarDelete","post","headers","sessionStorage","getItem","handleChange","e","target","value","onSubmitHandler","response","errors","get","handleFileSelect","bind","fetchUserPhoto","handleFileAvatar","componentDidMount","fetch","text","fetchUserAvatar","componentWillUnmount","componentDidUpdate","prevProps","prevState","pic","record","imageFromObject","map","obj","image","user","files","file","reader","FileReader","onload","rdEvt","binaryStr","result","btoa","log","readAsBinaryString","alert","render","i","_id","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWindowClose, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport {\r\n  Avatar,\r\n  WelcomeTitle,\r\n  Collection,\r\n  InputTypeFile,\r\n  LabelForProfilePicture,\r\n  LabelForCollections,\r\n  MyPhotoCollection,\r\n  StatusStyle,\r\n  PictureAndStatus,\r\n  DeleteButton,\r\n  ImageAndDeleteButton,\r\n  AvatarAndChoose,\r\n  PostButton,\r\n  TextAndStatus,\r\n  ContainerAllElements,\r\n  TextAreaAndErrors,\r\n  PostButtonTextAreaAndText,\r\n  ErrorText,\r\n  DeleteButtonAvatar,\r\n  AvatarAndDeleteButton\r\n} from \"./TaskId.jsx\";\r\n\r\nimport LoadingComponent from \"./LoadingComponent\";\r\n\r\nexport default class TaskId extends Component {\r\n  _isMounted = true;\r\n\r\n  state = {\r\n    message: \"Loading...\",\r\n    base64Img: null,\r\n    base64ImgAvatar: null,\r\n    avatar: null,\r\n    status: \"\",\r\n    statusToPost: \"\",\r\n    error: \"\",\r\n    photoCollection: [],\r\n    isLoading: false,\r\n    photo: \"\",\r\n    imagesFromCollection: [],\r\n    photoIndex: 0,\r\n    isOpen: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFileSelect = this.handleFileSelect.bind(this);\r\n    this.fetchUserPhoto = this.fetchUserPhoto.bind(this);\r\n    this.handleFileAvatar = this.handleFileAvatar.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    fetch(\"http://localhost:8080/api/secret\", {\r\n      headers: {\r\n        \"x-access-token\": sessionStorage.getItem(\"token\")\r\n      }\r\n    })\r\n      .then(res => res.text())\r\n      .then(res => this.setState({ message: res }));\r\n\r\n    axios\r\n      .get(\"http://localhost:8080/api/status\", {\r\n        headers: { \"x-access-token\": sessionStorage.getItem(\"token\") }\r\n      })\r\n      .then(res =>\r\n        this.setState({\r\n          statusToPost: res.data\r\n        })\r\n      );\r\n    this.fetchUserPhoto();\r\n    this.fetchUserAvatar();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.base64Img !== this.state.base64Img ||\r\n      prevState.base64ImgAvatar !== this.state.base64ImgAvatar ||\r\n      prevState.photo !== this.state.photo ||\r\n      prevState.avatar !== this.state.avatar\r\n    ) {\r\n      this.fetchUserPhoto();\r\n      this.fetchUserAvatar();\r\n      this.setState({ photo: \"\" });\r\n    }\r\n  }\r\n\r\n  fetchUserPhoto() {\r\n    axios\r\n      .get(\"http://localhost:8080/api/picture\", {\r\n        headers: {\r\n          \"x-access-token\": sessionStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (this._isMounted) {\r\n          const pic = res.data.record;\r\n          const imageFromObject = pic.map(obj => obj.image);\r\n\r\n          this.setState({\r\n            isLoading: false,\r\n            photoCollection: pic,\r\n            imagesFromCollection: imageFromObject\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  fetchUserAvatar() {\r\n    axios\r\n      .get(\"http://localhost:8080/api/avatar\", {\r\n        headers: {\r\n          \"x-access-token\": sessionStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (this._isMounted) {\r\n          this.setState({ isLoading: false, avatar: res.data.user.avatar });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleFileSelect(e) {\r\n    const files = e.target.files;\r\n    const file = files[0];\r\n\r\n    if (files && file) {\r\n      const reader = new FileReader();\r\n      reader.onload = rdEvt => {\r\n        const binaryStr = rdEvt.target.result;\r\n        const base64Img = btoa(binaryStr);\r\n        axios\r\n          .post(\r\n            \"http://localhost:8080/api/picture\",\r\n            { data: base64Img },\r\n            {\r\n              headers: {\r\n                \"x-access-token\": sessionStorage.getItem(\"token\")\r\n              }\r\n            }\r\n          )\r\n          .then(data => {\r\n            if (data.data.message) {\r\n              this.setState({\r\n                base64Img\r\n              });\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err.response);\r\n          });\r\n      };\r\n      reader.readAsBinaryString(file);\r\n    }\r\n  }\r\n\r\n  handleFileAvatar(e) {\r\n    const files = e.target.files;\r\n    const file = files[0];\r\n\r\n    if (files && file) {\r\n      const reader = new FileReader();\r\n      reader.onload = rdEvt => {\r\n        const binaryStr = rdEvt.target.result;\r\n        const base64ImgAvatar = btoa(binaryStr);\r\n        axios\r\n          .post(\r\n            \"http://localhost:8080/api/avatar\",\r\n            { data: base64ImgAvatar },\r\n            {\r\n              headers: {\r\n                \"x-access-token\": sessionStorage.getItem(\"token\")\r\n              }\r\n            }\r\n          )\r\n          .then(data => {\r\n            if (data.data.message) {\r\n              this.setState({\r\n                base64ImgAvatar\r\n              });\r\n            }\r\n          })\r\n          .catch(err => {\r\n            alert(\"Error while uploading image using firebase storage\");\r\n          });\r\n      };\r\n      reader.readAsBinaryString(file);\r\n    }\r\n  }\r\n\r\n  handleDelete = imageId => {\r\n    axios\r\n      .delete(`http://localhost:8080/api/picture/${imageId}`)\r\n      .then(res => {\r\n        this.setState({ photo: res.data });\r\n        // console.log(\"resss\", res);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  handleAvatarDelete = () => {\r\n    const avatar = \"\";\r\n    axios\r\n      .post(\r\n        \"http://localhost:8080/api/avatar\",\r\n        { data: avatar },\r\n        {\r\n          headers: {\r\n            \"x-access-token\": sessionStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      )\r\n      .then(data => this.setState({ avatar: \"\" }));\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      status: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmitHandler = () => {\r\n    const { status } = this.state;\r\n    axios\r\n      .post(\r\n        \"http://localhost:8080/api/status\",\r\n        { status },\r\n        {\r\n          headers: { \"x-access-token\": sessionStorage.getItem(\"token\") }\r\n        }\r\n      )\r\n      .then(res => {\r\n        if (res.data.message) {\r\n          this.setState({ statusToPost: status });\r\n        } else {\r\n        }\r\n      })\r\n      .catch(err => this.setState({ error: err.response.data.errors.status }));\r\n    axios\r\n      .get(\"http://localhost:8080/api/status\", {\r\n        headers: { \"x-access-token\": sessionStorage.getItem(\"token\") }\r\n      })\r\n      .then(res =>\r\n        this.setState({\r\n          statusToPost: res.data\r\n        })\r\n      );\r\n    this.setState({ status: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      avatar,\r\n      statusToPost,\r\n      error,\r\n      photoCollection,\r\n      isLoading,\r\n      imagesFromCollection,\r\n      photoIndex,\r\n      isOpen\r\n    } = this.state;\r\n\r\n    let data;\r\n    if (!isLoading) {\r\n      data = (\r\n        <ContainerAllElements>\r\n          <PictureAndStatus>\r\n            <AvatarAndChoose>\r\n              <WelcomeTitle>{this.state.message}</WelcomeTitle>\r\n\r\n              {avatar ? (\r\n                <AvatarAndDeleteButton>\r\n                  <Avatar\r\n                    src={`data:image/jpeg;base64,${avatar}`}\r\n                    alt=\"avatar\"\r\n                  />\r\n                  <DeleteButtonAvatar onClick={this.handleAvatarDelete}>\r\n                    <FontAwesomeIcon icon={faWindowClose} size=\"2x\" />\r\n                  </DeleteButtonAvatar>\r\n                </AvatarAndDeleteButton>\r\n              ) : (\r\n                <LabelForCollections />\r\n              )}\r\n\r\n              <InputTypeFile type=\"file\" onChange={this.handleFileAvatar} />\r\n              <InputTypeFile\r\n                type=\"file\"\r\n                id=\"myuni\"\r\n                onChange={this.handleFileAvatar}\r\n              />\r\n              <LabelForProfilePicture htmlFor=\"myuni\">\r\n                Add a profile picture\r\n              </LabelForProfilePicture>\r\n            </AvatarAndChoose>\r\n            <>\r\n              <TextAreaAndErrors>\r\n                <PostButtonTextAreaAndText>\r\n                  <TextAndStatus>\r\n                    <StatusStyle\r\n                      onChange={this.handleChange}\r\n                      value={this.state.status}\r\n                      placeholder=\"what's on your mind?\"\r\n                    />\r\n                    {statusToPost}\r\n                  </TextAndStatus>\r\n\r\n                  <PostButton onClick={this.onSubmitHandler}>post</PostButton>\r\n                </PostButtonTextAreaAndText>\r\n                <ErrorText> {error}</ErrorText>\r\n              </TextAreaAndErrors>\r\n            </>\r\n          </PictureAndStatus>\r\n          <MyPhotoCollection>\r\n            <InputTypeFile type=\"file\" onChange={this.handleFileSelect} />\r\n            <InputTypeFile\r\n              type=\"file\"\r\n              id=\"myuniqueid\"\r\n              onChange={this.handleFileSelect}\r\n            />\r\n            <LabelForCollections htmlFor=\"myuniqueid\">\r\n              <FontAwesomeIcon icon={faPlusCircle} size=\"4x\" />\r\n            </LabelForCollections>\r\n            {photoCollection.map((photo, i) => (\r\n              <ImageAndDeleteButton key={i}>\r\n                <Collection\r\n                  src={`data:image/jpeg;base64,${photo.image}`}\r\n                  alt=\"collection\"\r\n                  onClick={() => this.setState({ isOpen: true, photoIndex: i })}\r\n                />\r\n\r\n                <DeleteButton onClick={() => this.handleDelete(photo._id)}>\r\n                  <FontAwesomeIcon icon={faWindowClose} size=\"2x\" />\r\n                </DeleteButton>\r\n              </ImageAndDeleteButton>\r\n            ))}\r\n          </MyPhotoCollection>\r\n          {isOpen && (\r\n            <Lightbox\r\n              mainSrc={`data:image/jpeg;base64,${\r\n                imagesFromCollection[photoIndex]\r\n              }`}\r\n              nextSrc={`data:image/jpeg;base64,${\r\n                imagesFromCollection[\r\n                  (photoIndex + 1) % imagesFromCollection.length\r\n                ]\r\n              }`}\r\n              prevSrc={`data:image/jpeg;base64,${\r\n                imagesFromCollection[\r\n                  (photoIndex + imagesFromCollection.length - 1) %\r\n                    imagesFromCollection.length\r\n                ]\r\n              }`}\r\n              onCloseRequest={() => this.setState({ isOpen: false })}\r\n              onMovePrevRequest={() =>\r\n                this.setState({\r\n                  photoIndex:\r\n                    (photoIndex + imagesFromCollection.length - 1) %\r\n                    imagesFromCollection.length\r\n                })\r\n              }\r\n              onMoveNextRequest={() =>\r\n                this.setState({\r\n                  photoIndex: (photoIndex + 1) % imagesFromCollection.length\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </ContainerAllElements>\r\n      );\r\n    } else {\r\n      data = <LoadingComponent />;\r\n    }\r\n\r\n    return <div>{data}</div>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}