{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\REST API\\\\src\\\\components\\\\withAuth.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./withAuth\";\nimport NavBar from \"./NavBar\";\nimport LoadingComponent from \"./LoadingComponent\";\nexport default function withAuth(ComponentToProtect, shouldRedirect) {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        loading: true,\n        redirect: false,\n        isAuthenticated: false\n      };\n    }\n\n    componentDidMount() {\n      fetch(\"http://localhost:8080/checkToken\", {\n        headers: {\n          \"x-access-token\": sessionStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.setState({\n            loading: false,\n            isAuthenticated: true\n          });\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          loading: false,\n          redirect: true\n        });\n      });\n    }\n\n    render() {\n      const _this$state = this.state,\n            loading = _this$state.loading,\n            redirect = _this$state.redirect;\n\n      if (loading) {\n        return React.createElement(LoadingComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }\n\n      if (redirect && shouldRedirect) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(NavBar, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(ComponentToProtect, Object.assign({}, this.props, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp;\n}","map":{"version":3,"sources":["C:\\Users\\dell\\Desktop\\REST API\\src\\components\\withAuth.jsx"],"names":["React","Component","Redirect","NavBar","LoadingComponent","withAuth","ComponentToProtect","shouldRedirect","state","loading","redirect","isAuthenticated","componentDidMount","fetch","headers","sessionStorage","getItem","then","res","status","setState","error","Error","catch","err","console","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,eAAe,SAASC,QAAT,CAAkBC,kBAAlB,EAAsCC,cAAtC,EAAsD;AAAA;;AACnE,iBAAO,cAAcN,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC7BO,KAD6B,GACrB;AACNC,QAAAA,OAAO,EAAE,IADH;AAENC,QAAAA,QAAQ,EAAE,KAFJ;AAGNC,QAAAA,eAAe,EAAE;AAHX,OADqB;AAAA;;AAO7BC,IAAAA,iBAAiB,GAAG;AAClBC,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,QAAAA,OAAO,EAAE;AACP,4BAAkBC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AADX;AAD+B,OAArC,CAAL,CAKGC,IALH,CAKQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAKC,QAAL,CAAc;AAAEX,YAAAA,OAAO,EAAE,KAAX;AAAkBE,YAAAA,eAAe,EAAE;AAAnC,WAAd;AACD,SAFD,MAEO;AACL,gBAAMU,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,GAAG,CAACG,KAAd,CAAd;AACA,gBAAMA,KAAN;AACD;AACF,OAZH,EAaGE,KAbH,CAaSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACJ,KAAR,CAAcG,GAAd;AACA,aAAKJ,QAAL,CAAc;AAAEX,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACD,OAhBH;AAiBD;;AAEDgB,IAAAA,MAAM,GAAG;AAAA,0BACuB,KAAKlB,KAD5B;AAAA,YACCC,OADD,eACCA,OADD;AAAA,YACUC,QADV,eACUA,QADV;;AAEP,UAAID,OAAJ,EAAa;AACX,eAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAIC,QAAQ,IAAIH,cAAhB,EAAgC;AAC9B,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD,oBAAY,KAAKC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,oBAAC,kBAAD,oBAAwB,KAAKmB,KAA7B,EAAwC,KAAKnB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAMD;;AA1C4B,GAA/B;AA4CD","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./withAuth\";\r\nimport NavBar from \"./NavBar\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\n\r\nexport default function withAuth(ComponentToProtect, shouldRedirect) {\r\n  return class extends Component {\r\n    state = {\r\n      loading: true,\r\n      redirect: false,\r\n      isAuthenticated: false\r\n    };\r\n\r\n    componentDidMount() {\r\n      fetch(\"http://localhost:8080/checkToken\", {\r\n        headers: {\r\n          \"x-access-token\": sessionStorage.getItem(\"token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({ loading: false, isAuthenticated: true });\r\n          } else {\r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          this.setState({ loading: false, redirect: true });\r\n        });\r\n    }\r\n\r\n    render() {\r\n      const { loading, redirect } = this.state;\r\n      if (loading) {\r\n        return <LoadingComponent />;\r\n      }\r\n      if (redirect && shouldRedirect) {\r\n        return <Redirect to=\"/\" />;\r\n      }\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <NavBar {...this.state} />\r\n          <ComponentToProtect {...this.props} {...this.state} />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}